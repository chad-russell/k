apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: librechat
  namespace: librechat
spec:
  interval: 15m
  chart:
    spec:
      chart: librechat
      version: "1.8.9"  # Use the version published in the upstream Helm index
      sourceRef:
        kind: HelmRepository
        name: librechat
        namespace: librechat
      interval: 15m
  values:
    replicaCount: 1
    
    global:
      librechat:
        existingSecretName: "librechat-credentials-env"
        existingSecretApiKey: OPENAI_API_KEY

    librechat:
      configEnv:
        PLUGIN_MODELS: gpt-4,gpt-4-turbo-preview,gpt-4-0125-preview,gpt-4-1106-preview,gpt-4-0613,gpt-3.5-turbo,gpt-3.5-turbo-0125,gpt-3.5-turbo-1106,gpt-3.5-turbo-0613
        DEBUG_PLUGINS: "true"
        # The CREDS_KEY, CREDS_IV, JWT_SECRET, and JWT_REFRESH_SECRET will come from the secret
      existingSecretName: "librechat-credentials-env"
      configYamlContent: ""
      existingConfigYaml: ""
      
      # Volume used to store image Files uploaded to the Web UI
      imageVolume:
        enabled: true
        size: 10Gi
        accessModes: 
          - ReadWriteOnce
        storageClassName: "longhorn"

    # only lite RAG is supported
    librechat-rag-api:
      enabled: false
      embeddingsProvider: openai

    image:
      repository: danny-avila/librechat
      registry: ghcr.io
      pullPolicy: IfNotPresent
      tag: ""

    imagePullSecrets: []
    nameOverride: ""
    fullnameOverride: ""

    serviceAccount:
      create: true
      automount: true
      annotations: {}
      name: ""

    podAnnotations: {}
    podLabels: {}

    podSecurityContext:
      fsGroup: 2000

    securityContext:
      capabilities:
        drop:
        - ALL
      runAsNonRoot: true
      runAsUser: 1000

    service:
      type: ClusterIP
      port: 3080
      annotations: {}

    ingress:
      enabled: false  # We'll create our own Traefik IngressRoute

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80

    livenessProbe:
      httpGet:
        path: /health
        port: http
    readinessProbe:
      httpGet:
        path: /health
        port: http

    nodeSelector: {}

    tolerations: []

    affinity: {}

    # Strategy for LibreChat deployment updates
    updateStrategy:
      type: RollingUpdate

    # MongoDB Parameters
    mongodb:
      enabled: true
      auth:
        enabled: false
      databases:
       - LibreChat
      persistence: 
        size: 8Gi
        storageClass: "longhorn"

    meilisearch:
      enabled: false  # We'll use the external Meilisearch instance

