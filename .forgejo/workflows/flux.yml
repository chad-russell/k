name: Flux GitOps

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Flux action to perform"
        required: true
        default: "reconcile"
        type: choice
        options:
          - reconcile
          - check
          - diff
          - suspend
          - resume
      resource:
        description: "Resource to target (optional)"
        required: false
        default: "flux-system"

jobs:
  flux-operations:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flux CLI
        run: |
          # Download and install Flux CLI
          curl -s https://fluxcd.io/install.sh | sudo bash
          flux --version

      - name: Verify Flux installation
        run: |
          flux check --pre

      - name: Manual Flux Action
        run: |
          echo "üéØ Running manual Flux action: ${{ github.event.inputs.action }}"

          case "${{ github.event.inputs.action }}" in
            reconcile)
              if [ -n "${{ github.event.inputs.resource }}" ]; then
                flux reconcile kustomization ${{ github.event.inputs.resource }} --with-source
              else
                flux reconcile kustomization flux-system --with-source
              fi
              ;;
            check)
              flux check
              flux get all
              ;;
            diff)
              if [ -n "${{ github.event.inputs.resource }}" ]; then
                flux diff kustomization ${{ github.event.inputs.resource }} --path=.
              else
                flux diff kustomization flux-system --path=.
              fi
              ;;
            suspend)
              if [ -n "${{ github.event.inputs.resource }}" ]; then
                flux suspend kustomization ${{ github.event.inputs.resource }}
              else
                echo "‚ùå Resource name required for suspend action"
                exit 1
              fi
              ;;
            resume)
              if [ -n "${{ github.event.inputs.resource }}" ]; then
                flux resume kustomization ${{ github.event.inputs.resource }}
              else
                echo "‚ùå Resource name required for resume action"
                exit 1
              fi
              ;;
          esac

      - name: Post-action Status
        if: always()
        run: |
          echo "üìà Final Flux status:"
          flux get kustomizations
          flux get helmreleases --all-namespaces
