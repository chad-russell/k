# Examples of how to modify your applications for better metrics integration

# 1. Example: Adding metrics annotations to Forgejo Helm values
# Add this to apps/development/forgejo/helm-release.yaml under spec.values:

## Metrics configuration for Forgejo
#  gitea:
#    config:
#      metrics:
#        ENABLED: true
#        TOKEN: ""  # Optional: secure with token
#
#  # Add metrics port to service
#  service:
#    http:
#      type: ClusterIP
#      port: 80
#      annotations:
#        prometheus.io/scrape: "true"
#        prometheus.io/path: "/api/v1/metrics"
#        prometheus.io/port: "3000"

---
# 2. Example: ServiceMonitor for Traefik (if you enable metrics)
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: traefik-metrics
  namespace: monitoring
spec:
  namespaceSelector:
    matchNames:
      - traefik-system # Adjust based on your Traefik namespace
  selector:
    matchLabels:
      app.kubernetes.io/name: traefik
  endpoints:
    - port: metrics
      interval: 30s
      path: /metrics

---
# 3. Example: Adding Redis metrics for applications
# Add this as a sidecar container to your Redis deployments:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-with-exporter
spec:
  template:
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          # ... your existing redis config

        - name: redis-exporter
          image: oliver006/redis_exporter:v1.52.0
          ports:
            - containerPort: 9121
              name: metrics
          env:
            - name: REDIS_ADDR
              value: "localhost:6379"
          resources:
            requests:
              cpu: 50m
              memory: 50Mi
            limits:
              cpu: 100m
              memory: 100Mi

---
# 4. Example: Adding metrics to a custom deployment
# This shows how to modify your paperless-ngx or similar deployments:
apiVersion: v1
kind: Service
metadata:
  name: paperless-ngx
  namespace: paperless-ngx
  labels:
    app: paperless-ngx
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics" # If your app exposes metrics endpoint
spec:
  selector:
    app: paperless-ngx
  ports:
    - name: http
      port: 8000
      targetPort: 8000
    - name: metrics # Add metrics port if different from main port
      port: 9090
      targetPort: 9090

---
# 5. Example: Application-specific alerts
# Add this to your Prometheus rules:
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: application-alerts
  namespace: monitoring
spec:
  groups:
    - name: application.rules
      rules:
        - alert: ApplicationDown
          expr: probe_success{job="blackbox-http"} == 0
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: "Application {{ $labels.app_name }} is down"
            description: "Application {{ $labels.app_name }} has been down for more than 5 minutes."

        - alert: HighApplicationResponseTime
          expr: probe_duration_seconds{job="blackbox-http"} > 5
          for: 2m
          labels:
            severity: warning
          annotations:
            summary: "High response time for {{ $labels.app_name }}"
            description: "Application {{ $labels.app_name }} response time is {{ $value }}s"

        - alert: HighMemoryUsage
          expr: (container_memory_usage_bytes / container_spec_memory_limit_bytes) * 100 > 80
          for: 5m
          labels:
            severity: warning
          annotations:
            summary: "High memory usage in {{ $labels.kubernetes_namespace }}/{{ $labels.kubernetes_pod_name }}"
            description: "Memory usage is {{ $value }}%"
