apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  name: postgres-cluster
  namespace: postgres-system
spec:
  # 3 instances for true HA (1 primary + 2 replicas)
  instances: 3

  # PostgreSQL version
  imageName: ghcr.io/cloudnative-pg/postgresql:16.1

  # Bootstrap configuration
  bootstrap:
    initdb:
      database: app_db
      owner: app_user
      secret:
        name: postgres-credentials

  # Superuser secret
  superuserSecret:
    name: postgres-credentials

  # Storage configuration using Longhorn
  storage:
    size: 20Gi
    storageClass: longhorn

  # Resource limits
  resources:
    requests:
      memory: "256Mi"
      cpu: "500m"
    limits:
      memory: "1Gi"
      cpu: "1000m"

  # PostgreSQL configuration
  postgresql:
    parameters:
      # Performance tuning
      shared_preload_libraries: "pg_stat_statements"
      max_connections: "200"
      shared_buffers: "256MB"
      effective_cache_size: "1GB"
      maintenance_work_mem: "64MB"
      checkpoint_completion_target: "0.9"
      wal_buffers: "16MB"
      default_statistics_target: "100"
      random_page_cost: "1.1"
      effective_io_concurrency: "200"

      # Logging
      log_statement: "all"
      log_min_duration_statement: "1000"
      log_checkpoints: "on"
      log_connections: "on"
      log_disconnections: "on"
      log_lock_waits: "on"

      # Replication
      wal_level: "replica"
      max_wal_senders: "10"
      max_replication_slots: "10"
      hot_standby: "on"

  # Monitoring - removed monitoring.enabled as it's not supported in this version

  # Backup configuration - commented out for initial deployment
  # backup:
  #   retentionPolicy: "30d"
  #   barmanObjectStore:
  #     destinationPath: "s3://your-backup-bucket/postgres"
  #     s3Credentials:
  #       accessKeyId:
  #         name: postgres-backup-credentials
  #         key: ACCESS_KEY_ID
  #       secretAccessKey:
  #         name: postgres-backup-credentials
  #         key: SECRET_ACCESS_KEY
  #     wal:
  #       retention: "5d"
  #     data:
  #       retention: "30d"
  #     # Encryption
  #     encryption: "AES256"

  # Failover configuration
  failoverDelay: 0
  switchoverDelay:
    40s

    # Node affinity to spread instances across nodes - using simplified format
  affinity:
    enablePodAntiAffinity: true
    topologyKey: kubernetes.io/hostname
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-cluster-rw
  namespace: postgres-system
  labels:
    app: postgres-cluster
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    postgresql: postgres-cluster
    role: primary
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-cluster-ro
  namespace: postgres-system
  labels:
    app: postgres-cluster
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    postgresql: postgres-cluster
    role: replica
