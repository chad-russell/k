apiVersion: v1
kind: ConfigMap
metadata:
  name: traefik-helm-values
  namespace: traefik
data:
  values.yaml: |
    image:
      registry: docker.io
      repository: traefik
      tag: v2.11.2

    service:
      type: LoadBalancer
      ports:
        - name: dashboard
          port: 8080
          targetPort: 8080

    replicas: 3
    enableLeaderElection: true

    # Persistent storage for Traefik data (including ACME certificates)
    persistence:
      enabled: true
      name: traefik
      size: 128Mi
      storageClass: "longhorn"
      accessModes:
        - ReadWriteMany
      path: /data
      annotations: {}

    # Use fsGroup to automatically set correct ownership
    podSecurityContext:
      fsGroup: 65532
      fsGroupChangePolicy: "OnRootMismatch"
      runAsGroup: 65532
      runAsNonRoot: true
      runAsUser: 65532

    initContainers:
      - name: fix-acme-permissions
        image: busybox:1.36
        command: ["sh", "-c", "chmod -v 600 /data/acme.json || true"]
        volumeMounts:
          - name: data
            mountPath: /data

    additionalArguments:
      - "--api.dashboard=true"
      - "--certificatesresolvers.letsencrypt.acme.storage=/data/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.provider=route53"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.delaybeforecheck=240"
      - "--certificatesresolvers.letsencrypt.acme.dnschallenge.resolvers=1.1.1.1:53,8.8.8.8:53"
      - "--log.level=INFO"

    # Enable entryPoints - both HTTP and HTTPS
    entryPoints:
      web:
        address: ":80"
        # Redirect HTTP to HTTPS
        http:
          redirections:
            entrypoint:
              to: websecure
              scheme: https
              permanent: true
      websecure:
        address: ":443"
        # Default TLS configuration
        http:
          tls:
            certResolver: letsencrypt
            domains:
              - main: "crussell.io"
                sans: ["*.crussell.io"]
              - main: "internal.crussell.io"
                sans: ["*.internal.crussell.io"]
              - main: "k3s.crussell.io"
                sans: ["*.k3s.crussell.io"]
      traefik:
        address: ":8080"

    # Create default IngressClass if not set
    ingressClass:
      enabled: true

    # Ensure service account token is mounted for Kubernetes API access
    automountServiceAccountToken: true

    # Environment variables for Route53 (will be populated from secrets)
    env:
      - name: AWS_REGION
        value: "us-east-1"
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: traefik-helm-secrets
            key: aws-access-key-id
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: traefik-helm-secrets
            key: aws-secret-access-key
      - name: AWS_HOSTED_ZONE_ID
        valueFrom:
          secretKeyRef:
            name: traefik-helm-secrets
            key: aws-hosted-zone-id
